{"version":3,"sources":["webpack://jeff-keller-personal-site/./src/templates/category-template.js"],"names":["data","pageContext","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","category","currentPage","prevPagePath","nextPagePath","hasPrevPage","hasNextPage","edges","allMarkdownRemark","pageTitle","description"],"mappings":"0NAyEA,UAzDyB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAChC,GAAqDC,UAAtCC,EAAf,EAAQC,MAA4BC,EAApC,EAA0BC,SAGxBC,EAMEN,EANFM,SACAC,EAKEP,EALFO,YACAC,EAIER,EAJFQ,aACAC,EAGET,EAHFS,aACAC,EAEEV,EAFFU,YACAC,EACEX,EADFW,YAGMC,EAAUb,EAAKc,kBAAfD,MACFE,EAAYP,EAAc,EAAOD,EAArB,WAAwCC,EAAxC,MAAyDL,EAAiBI,EAA1E,MAAwFJ,EAE1G,OACE,gBAAC,IAAD,CAAQC,MAAOW,EAAWC,YAAaX,GACrC,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAMD,MAAOG,GACX,gBAAC,IAAD,CAAMM,MAAOA,IACb,gBAAC,IAAD,CACEJ,aAAcA,EACdC,aAAcA,EACdC,YAAaA,EACbC,YAAaA","file":"component---src-templates-category-template-js-0e69e8e518f1dda95fac.js","sourcesContent":["\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Feed from '../components/Feed';\nimport Page from '../components/Page';\nimport Pagination from '../components/Pagination';\nimport { useSiteMetadata } from '../hooks';\n// import type { PageContext, AllMarkdownRemark } from '../types';\n\n// type Props = {\n//   data: AllMarkdownRemark,\n//   pageContext: PageContext\n// };\n\nconst CategoryTemplate = ({ data, pageContext }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n\n  const {\n    category,\n    currentPage,\n    prevPagePath,\n    nextPagePath,\n    hasPrevPage,\n    hasNextPage,\n  } = pageContext;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle = currentPage > 0 ? `${category} - Page ${currentPage} - ${siteTitle}` : `${category} - ${siteTitle}`;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar />\n      <Page title={category}>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query CategoryPage($category: String, $postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n        limit: $postsLimit,\n        skip: $postsOffset,\n        filter: { frontmatter: { category: { eq: $category }, template: { eq: \"post\" }, draft: { ne: true } } },\n        sort: { order: DESC, fields: [frontmatter___date] }\n      ){\n      edges {\n        node {\n          fields {\n            categorySlug\n            slug\n          }\n          frontmatter {\n            date\n            description\n            category\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default CategoryTemplate;\n"],"sourceRoot":""}