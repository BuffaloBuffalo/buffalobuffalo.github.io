{"version":3,"sources":["webpack://jeff-keller-personal-site/./src/templates/posts-template.js"],"names":["data","pageContext","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","edges","allMarkdownRemark","pageTitle","description"],"mappings":"0NAwEA,UAxDsB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC7B,GAAqDC,UAAtCC,EAAf,EAAQC,MAA4BC,EAApC,EAA0BC,SAGxBC,EAKEN,EALFM,YACAC,EAIEP,EAJFO,YACAC,EAGER,EAHFQ,YACAC,EAEET,EAFFS,aACAC,EACEV,EADFU,aAGMC,EAAUZ,EAAKa,kBAAfD,MACFE,EAAYP,EAAc,EAAd,gBAAkCA,EAAlC,MAAmDJ,EAAcA,EAEnF,OACE,gBAAC,IAAD,CAAQC,MAAOU,EAAWC,YAAaV,GACrC,gBAAC,IAAD,MACA,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAMO,MAAOA,IACb,gBAAC,IAAD,CACEF,aAAcA,EACdC,aAAcA,EACdF,YAAaA,EACbD,YAAaA","file":"component---src-templates-posts-template-js-03b6be0f07389e39a9cc.js","sourcesContent":["\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Sidebar from '../components/Sidebar';\nimport Feed from '../components/Feed';\nimport Page from '../components/Page';\nimport Pagination from '../components/Pagination';\nimport { useSiteMetadata } from '../hooks';\n// import type { PageContext, AllMarkdownRemark } from '../types';\n\n// type Props = {\n//   data: AllMarkdownRemark,\n//   pageContext: PageContext\n// };\n\nconst PostsTemplate = ({ data, pageContext }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n\n  const {\n    currentPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath\n  } = pageContext;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle = currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar />\n      <Page>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostsTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n        limit: $postsLimit,\n        skip: $postsOffset,\n        filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } },\n        sort: { order: DESC, fields: [frontmatter___date] }\n      ){\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostsTemplate;\n"],"sourceRoot":""}