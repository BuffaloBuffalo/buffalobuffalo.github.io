{"version":3,"file":"component---src-templates-post-template-js-18907bafce7244a18956.js","mappings":"maACW,EAAS,+BACTA,EAAqB,4C,SCwBhC,MApBeC,KACb,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,MAEnB,OACEC,EAAAA,cAAA,OAAKC,UAAWC,GACdF,EAAAA,cAAA,KAAGC,UAAWC,EAAAA,aACXJ,EAAOK,IACRH,EAAAA,cAAA,KACEC,UAAWC,EACXE,MAAMC,EAAAA,EAAAA,GAAe,UAAWP,EAAOQ,SAASC,SAChDC,IAAI,sBACJC,OAAO,UAEPT,EAAAA,cAAA,cAASF,EAAOY,MAAc,gBAG9B,ECNV,MAPgBC,IAAA,IAAC,KAAEC,EAAI,MAAEC,GAAOF,EAAA,OAC9BX,EAAAA,cAAA,OAAKC,UCTc,kCDUjBD,EAAAA,cAAA,MAAIC,UCRoB,yCDQkBY,GAC1Cb,EAAAA,cAAA,OAAKC,UCVkB,uCDUkBa,wBAAyB,CAAEC,OAAQH,KACxE,EEZGI,EAAa,iCCaxB,MANaL,IAAA,IAAC,KAAEM,GAAMN,EAAA,OACpBX,EAAAA,cAAA,OAAKC,UAAWC,EAAAA,MACdF,EAAAA,cAAA,KAAGC,UAAWC,GAAsB,aAAW,IAAIgB,KAAKD,GAAME,mBAAmB,QAAS,CAAEC,SAAU,mBAAoBC,KAAM,UAAWC,MAAO,QAASC,IAAK,aAC5J,ECaR,MAdaZ,IAAA,IAAC,KAAEa,EAAI,SAAEC,GAAUd,EAAA,OAC9BX,EAAAA,cAAA,OAAKC,UCVW,4BDWdD,EAAAA,cAAA,MAAIC,UCVgB,kCDWjBwB,GAAYA,EAASC,KAAI,CAACC,EAAMC,IAC/B5B,EAAAA,cAAA,MAAIC,UCXgB,sCDWqB4B,IAAKL,EAAKI,IACjD5B,EAAAA,cAAC8B,EAAAA,KAAI,CAACC,GAAIJ,EAAM1B,UCXM,4CDYnBuB,EAAKI,QAKV,EEnBGI,EAAe,mCACfC,EAAmB,wCC4B9B,MAtBatB,IAAe,IAAd,KAAEuB,GAAMvB,EACpB,MAAM,KAAEwB,GAASD,GACX,SAAET,GAAaS,EAAKE,QACpB,KAAEZ,EAAI,MAAEX,EAAK,KAAEI,GAASiB,EAAKG,YAEnC,OACErC,EAAAA,cAAA,OAAKC,UAAWC,EAAAA,MACdF,EAAAA,cAAC8B,EAAAA,KAAI,CAAC7B,UAAWC,EAA4B6B,GAAG,UAAS,gBAEzD/B,EAAAA,cAAA,OAAKC,UAAWC,EAAAA,eACdF,EAAAA,cAACsC,EAAO,CAAC1B,KAAMuB,EAAMtB,MAAOA,KAG9Bb,EAAAA,cAAA,OAAKC,UAAWC,GACdF,EAAAA,cAACuC,EAAI,CAACtB,KAAMA,IACXO,GAAQC,GAAYzB,EAAAA,cAACwC,EAAI,CAAChB,KAAMA,EAAMC,SAAUA,IACjDzB,EAAAA,cAACH,EAAM,OAEL,ECuBV,MApCqBc,IAAe,IAAd,KAAE8B,GAAM9B,EAC5B,MAAQE,MAAO6B,EAAWC,SAAUC,IAAiB7C,EAAAA,EAAAA,OAC/C,YAAEsC,GAAgBI,EAAKI,gBACrBhC,MAAOiC,EAAWC,YAAaC,EAAkB,GAAE,YAAEC,GAAgBZ,EACvEa,EAAkBF,GAAmBJ,EACrCO,EAAiBF,aAAW,EAAXA,EAAaG,UAEpC,OACEpD,EAAAA,cAACqD,EAAAA,EAAM,CAACxC,MAAQ,GAAEiC,OAAeJ,IAAaK,YAAaG,EAAiBD,YAAaE,GACvFnD,EAAAA,cAACsD,EAAI,CAACpB,KAAMO,EAAKI,iBACV,C","sources":["webpack://jeff-keller-personal-site/./src/components/Post/Author/Author.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Author/Author.js","webpack://jeff-keller-personal-site/./src/components/Post/Content/Content.js","webpack://jeff-keller-personal-site/./src/components/Post/Content/Content.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Meta/Meta.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Meta/Meta.js","webpack://jeff-keller-personal-site/./src/components/Post/Tags/Tags.js","webpack://jeff-keller-personal-site/./src/components/Post/Tags/Tags.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Post.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Post.js","webpack://jeff-keller-personal-site/./src/templates/post-template.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var author = \"Author-module--author--HFjbH\";\nexport var author__bioTwitter = \"Author-module--author__bio-twitter--dSEil\";","\nimport React from 'react';\nimport { getContactHref } from '../../../utils';\nimport * as styles from './Author.module.scss';\nimport { useSiteMetadata } from '../../../hooks';\n\nconst Author = () => {\n  const { author } = useSiteMetadata();\n\n  return (\n    <div className={styles['author']}>\n      <p className={styles['author__bio']}>\n        {author.bio}\n        <a\n          className={styles['author__bioTwitter']}\n          href={getContactHref('twitter', author.contacts.twitter)}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <strong>{author.name}</strong> on Twitter\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Author;\n","\nimport React from 'react';\nimport * as styles from './Content.module.scss';\n\n// type Props = {\n//   body: string,\n//   title: string\n// };\n\nconst Content = ({ body, title }) => (\n  <div className={styles['content']}>\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport var content = \"Content-module--content--gNWBo\";\nexport var content__body = \"Content-module--content__body--DOUTe\";\nexport var content__title = \"Content-module--content__title--8kCAQ\";","// extracted by mini-css-extract-plugin\nexport var meta__date = \"Meta-module--meta__date--DBthC\";","\nimport React from 'react';\nimport * as styles from './Meta.module.scss';\n\n// type Props = {\n//   date: string\n// };\n\nconst Meta = ({ date }) => (\n  <div className={styles['meta']}>\n    <p className={styles['meta__date']}>Published {new Date(date).toLocaleDateString('en-US', { timeZone: 'America/New_York', year: 'numeric', month: 'short', day: 'numeric' })}</p>\n  </div>\n);\n\nexport default Meta;\n","\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport * as styles from './Tags.module.scss';\n\n// type Props = {\n//   tags: string[],\n//   tagSlugs: string[]\n// };\n\nconst Tags = ({ tags, tagSlugs }) => (\n  <div className={styles['tags']}>\n    <ul className={styles['tags__list']}>\n      {tagSlugs && tagSlugs.map((slug, i) => (\n        <li className={styles['tags__listItem']} key={tags[i]}>\n          <Link to={slug} className={styles['tags__listItemLink']}>\n            {tags[i]}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","// extracted by mini-css-extract-plugin\nexport var tags = \"Tags-module--tags--GFiVM\";\nexport var tags__list = \"Tags-module--tags__list--ffA5W\";\nexport var tags__listItem = \"Tags-module--tags__list-item--qYHlJ\";\nexport var tags__listItemLink = \"Tags-module--tags__list-item-link--PsKq1\";","// extracted by mini-css-extract-plugin\nexport var post__comments = \"Post-module--post__comments--J8N5x\";\nexport var post__footer = \"Post-module--post__footer--C8pNj\";\nexport var post__homeButton = \"Post-module--post__home-button--w5XKO\";","\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Author from './Author';\nimport Content from './Content';\nimport Meta from './Meta';\nimport Tags from './Tags';\nimport * as styles from './Post.module.scss';\n\nconst Post = ({ post }) => {\n  const { html } = post;\n  const { tagSlugs } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  return (\n    <div className={styles['post']}>\n      <Link className={styles['post__homeButton']} to=\"/posts\">All Articles</Link>\n\n      <div className={styles['post__content']}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles['post__footer']}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n        <Author />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\nimport { useSiteMetadata } from '../hooks';\n// import type { MarkdownRemark } from '../types';\n//\n// type Props = {\n//   data: {\n//     markdownRemark: MarkdownRemark\n//   }\n// };\n\nconst PostTemplate = ({ data }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n  const { frontmatter } = data.markdownRemark;\n  const { title: postTitle, description: postDescription = '', socialImage } = frontmatter;\n  const metaDescription = postDescription || siteSubtitle;\n  const socialImageUrl = socialImage?.publicURL;\n\n  return (\n    <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription} socialImage={socialImageUrl} >\n      <Post post={data.markdownRemark} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage {\n          publicURL\n        }\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n"],"names":["author__bioTwitter","Author","author","useSiteMetadata","React","className","styles","bio","href","getContactHref","contacts","twitter","rel","target","name","_ref","body","title","dangerouslySetInnerHTML","__html","meta__date","date","Date","toLocaleDateString","timeZone","year","month","day","tags","tagSlugs","map","slug","i","key","Link","to","post__footer","post__homeButton","post","html","fields","frontmatter","Content","Meta","Tags","data","siteTitle","subtitle","siteSubtitle","markdownRemark","postTitle","description","postDescription","socialImage","metaDescription","socialImageUrl","publicURL","Layout","Post"],"sourceRoot":""}