{"version":3,"sources":["webpack://jeff-keller-personal-site/./src/components/Post/Author/Author.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Author/Author.js","webpack://jeff-keller-personal-site/./src/components/Post/Content/Content.js","webpack://jeff-keller-personal-site/./src/components/Post/Content/Content.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Meta/Meta.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Meta/Meta.js","webpack://jeff-keller-personal-site/./src/components/Post/Tags/Tags.js","webpack://jeff-keller-personal-site/./src/components/Post/Tags/Tags.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Post.module.scss","webpack://jeff-keller-personal-site/./src/components/Post/Post.js","webpack://jeff-keller-personal-site/./src/templates/post-template.js"],"names":["author__bioTwitter","author","useSiteMetadata","className","styles","bio","href","getContactHref","contacts","twitter","rel","target","name","body","title","dangerouslySetInnerHTML","__html","meta__date","date","Date","toLocaleDateString","timeZone","year","month","day","tags","tagSlugs","map","slug","i","key","Link","to","post__footer","post__homeButton","post","html","fields","frontmatter","data","siteTitle","siteSubtitle","subtitle","markdownRemark","postTitle","description","postDescription","socialImage","metaDescription","socialImageUrl","publicURL","Layout"],"mappings":"maACW,EAAS,+BACTA,EAAqB,4C,SCwBhC,EApBe,WACb,IAAQC,GAAWC,UAAXD,OAER,OACE,uBAAKE,UAAWC,GACd,qBAAGD,UAAWC,eACXH,EAAOI,IACR,qBACEF,UAAWC,EACXE,MAAMC,OAAe,UAAWN,EAAOO,SAASC,SAChDC,IAAI,sBACJC,OAAO,UAEP,8BAASV,EAAOW,MANlB,kBCGR,EAPgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACd,uBAAKX,UCTc,kCDUjB,sBAAIA,UCToB,yCDSkBW,GAC1C,uBAAKX,UCTkB,uCDSkBY,wBAAyB,CAAEC,OAAQH,OEXrEI,EAAa,iCCaxB,EANa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,uBAAKf,UAAWC,QACd,qBAAGD,UAAWC,GAAd,aAA+C,IAAIe,KAAKD,GAAME,mBAAmB,QAAS,CAAEC,SAAU,mBAAoBC,KAAM,UAAWC,MAAO,QAASC,IAAK,eCcpK,EAda,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACX,uBAAKvB,UCVW,4BDWd,sBAAIA,UCVgB,kCDWjBuB,GAAYA,EAASC,KAAI,SAACC,EAAMC,GAAP,OACxB,sBAAI1B,UCXgB,sCDWqB2B,IAAKL,EAAKI,IACjD,gBAAC,EAAAE,KAAD,CAAMC,GAAIJ,EAAMzB,UCXM,4CDYnBsB,EAAKI,WEfPI,EAAe,mCAEfC,EAAmB,wCCiC9B,EAtBa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNC,EAASD,EAATC,KACR,EAA2BD,EAAKE,OAAxBX,EAAR,EAAQA,SACR,GADA,EAAkBE,KACYO,EAAKG,aAA3Bb,EAAR,EAAQA,KAAMX,EAAd,EAAcA,MAAOI,EAArB,EAAqBA,KAErB,OACE,uBAAKf,UAAWC,QACd,gBAAC,EAAA2B,KAAD,CAAM5B,UAAWC,EAA4B4B,GAAG,UAAhD,gBAEA,uBAAK7B,UAAWC,iBACd,gBAAC,EAAD,CAASS,KAAMuB,EAAMtB,MAAOA,KAG9B,uBAAKX,UAAWC,GACd,gBAAC,EAAD,CAAMc,KAAMA,IACXO,GAAQC,GAAY,gBAAC,EAAD,CAAMD,KAAMA,EAAMC,SAAUA,IACjD,gBAAC,EAAD,SCoBR,EApCqB,SAAC,GAAc,IAAZa,EAAW,EAAXA,KACtB,GAAqDrC,UAAtCsC,EAAf,EAAQ1B,MAA4B2B,EAApC,EAA0BC,SAClBJ,EAAgBC,EAAKI,eAArBL,YACOM,EAA8DN,EAArExB,MAAR,EAA6EwB,EAAnDO,YAAaC,OAAvC,MAAyD,GAAzD,EAA6DC,EAAgBT,EAAhBS,YACvDC,EAAkBF,GAAmBL,EACrCQ,EAAiBF,aAAH,EAAGA,EAAaG,UAEpC,OACE,gBAACC,EAAA,EAAD,CAAQrC,MAAU8B,EAAL,MAAoBJ,EAAaK,YAAaG,EAAiBD,YAAaE,GACvF,gBAAC,EAAD,CAAMd,KAAMI,EAAKI","file":"component---src-templates-post-template-js-b2a06937af7dc61fb25f.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport var author = \"Author-module--author--2kT-Q\";\nexport var author__bioTwitter = \"Author-module--author__bio-twitter--2Ft9u\";","\nimport React from 'react';\nimport { getContactHref } from '../../../utils';\nimport * as styles from './Author.module.scss';\nimport { useSiteMetadata } from '../../../hooks';\n\nconst Author = () => {\n  const { author } = useSiteMetadata();\n\n  return (\n    <div className={styles['author']}>\n      <p className={styles['author__bio']}>\n        {author.bio}\n        <a\n          className={styles['author__bioTwitter']}\n          href={getContactHref('twitter', author.contacts.twitter)}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <strong>{author.name}</strong> on Twitter\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Author;\n","\nimport React from 'react';\nimport * as styles from './Content.module.scss';\n\n// type Props = {\n//   body: string,\n//   title: string\n// };\n\nconst Content = ({ body, title }) => (\n  <div className={styles['content']}>\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// extracted by mini-css-extract-plugin\nexport var content = \"Content-module--content--3dNJJ\";\nexport var content__title = \"Content-module--content__title--2bVSe\";\nexport var content__body = \"Content-module--content__body--1YAIr\";","// extracted by mini-css-extract-plugin\nexport var meta__date = \"Meta-module--meta__date--3Fmrj\";","\nimport React from 'react';\nimport * as styles from './Meta.module.scss';\n\n// type Props = {\n//   date: string\n// };\n\nconst Meta = ({ date }) => (\n  <div className={styles['meta']}>\n    <p className={styles['meta__date']}>Published {new Date(date).toLocaleDateString('en-US', { timeZone: 'America/New_York', year: 'numeric', month: 'short', day: 'numeric' })}</p>\n  </div>\n);\n\nexport default Meta;\n","\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport * as styles from './Tags.module.scss';\n\n// type Props = {\n//   tags: string[],\n//   tagSlugs: string[]\n// };\n\nconst Tags = ({ tags, tagSlugs }) => (\n  <div className={styles['tags']}>\n    <ul className={styles['tags__list']}>\n      {tagSlugs && tagSlugs.map((slug, i) => (\n        <li className={styles['tags__listItem']} key={tags[i]}>\n          <Link to={slug} className={styles['tags__listItemLink']}>\n            {tags[i]}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","// extracted by mini-css-extract-plugin\nexport var tags = \"Tags-module--tags--1r6Jk\";\nexport var tags__list = \"Tags-module--tags__list--3-_4K\";\nexport var tags__listItem = \"Tags-module--tags__list-item--3E0p6\";\nexport var tags__listItemLink = \"Tags-module--tags__list-item-link--2Pbqe\";","// extracted by mini-css-extract-plugin\nexport var post__footer = \"Post-module--post__footer--L98TP\";\nexport var post__comments = \"Post-module--post__comments--21hyQ\";\nexport var post__homeButton = \"Post-module--post__home-button--33KJx\";","\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Author from './Author';\nimport Content from './Content';\nimport Meta from './Meta';\nimport Tags from './Tags';\nimport * as styles from './Post.module.scss';\n// import type { Node } from '../../types';\n\n// type Props = {\n//   post: Node\n// };\n\nconst Post = ({ post }) => {\n  const { html } = post;\n  const { tagSlugs, slug } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  return (\n    <div className={styles['post']}>\n      <Link className={styles['post__homeButton']} to=\"/posts\">All Articles</Link>\n\n      <div className={styles['post__content']}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles['post__footer']}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n        <Author />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\nimport { useSiteMetadata } from '../hooks';\n// import type { MarkdownRemark } from '../types';\n//\n// type Props = {\n//   data: {\n//     markdownRemark: MarkdownRemark\n//   }\n// };\n\nconst PostTemplate = ({ data }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n  const { frontmatter } = data.markdownRemark;\n  const { title: postTitle, description: postDescription = '', socialImage } = frontmatter;\n  const metaDescription = postDescription || siteSubtitle;\n  const socialImageUrl = socialImage?.publicURL;\n\n  return (\n    <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription} socialImage={socialImageUrl} >\n      <Post post={data.markdownRemark} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n        socialImage {\n          publicURL\n        }\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n"],"sourceRoot":""}